# build wall-util, then publish to glab releases
stages:
  - build
  - release

build:
  image: rust:latest
  stage: build
  script:
    - cargo build --release

  artifacts:
    name: "wall-util from $CI_COMMIT_REF_NAME"
    paths:
      - target/release/wall-util

  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

# this probably won't work
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: build
      artifacts: true

  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

  script:
    - echo $CI_COMMIT_TAG $CI_COMMIT_REF_NAME $CI_COMMIT_BRANCH
    - release-cli create --name "wall-util" --tag-name $CI_COMMIT_TAG --description "wall-util" --ref $CI_COMMIT_REF_NAME --assets-link "target/release/wall-util" --assets-name "wall-util"
    - release-cli publish

